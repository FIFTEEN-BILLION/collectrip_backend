# Generated by Django 4.2 on 2025-08-12 02:32

import apps.users.models
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성 시각')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정 시각')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='내부 사용자 식별자 (UUID4)', primary_key=True, serialize=False)),
                ('kakao_id', models.BigIntegerField(help_text='카카오 사용자 고유 ID', unique=True)),
                ('nickname', models.CharField(help_text='사용자 닉네임', max_length=150)),
                ('profile_image', models.URLField(blank=True, help_text='프로필 이미지 URL', null=True)),
                ('is_staff', models.BooleanField(default=False, help_text='관리자 페이지 접근 권한')),
                ('is_active', models.BooleanField(default=True, help_text='활성 사용자 여부')),
                ('groups', models.ManyToManyField(blank=True, help_text='사용자가 속한 그룹 목록', related_name='custom_user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='사용자에게 직접 부여된 권한 목록', related_name='custom_user_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', apps.users.models.UserManager()),
            ],
        ),
    ]
